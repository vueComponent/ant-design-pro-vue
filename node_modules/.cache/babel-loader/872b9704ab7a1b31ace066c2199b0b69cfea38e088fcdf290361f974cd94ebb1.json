{"ast":null,"code":"import _objectSpread from \"/home/cg/public/h1emu-boot-vue/node_modules/_@babel_runtime@7.20.1@@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport md5 from 'md5';\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha';\nimport { mapActions } from 'vuex';\nimport { timeFix } from '@/utils/util';\nimport { getSmsCaptcha, get2step } from '@/api/login';\nexport default {\n  components: {\n    TwoStepCaptcha: TwoStepCaptcha\n  },\n  data: function data() {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n    get2step({}).then(function (res) {\n      _this.requiredTwoStepCaptcha = res.result.stepCode;\n    }).catch(function () {\n      _this.requiredTwoStepCaptcha = false;\n    });\n    // this.requiredTwoStepCaptcha = true\n  },\n\n  methods: _objectSpread(_objectSpread({}, mapActions(['Login', 'Logout'])), {}, {\n    // handler\n    handleUsernameOrEmail: function handleUsernameOrEmail(rule, value, callback) {\n      var state = this.state;\n      var regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/;\n      if (regex.test(value)) {\n        state.loginType = 0;\n      } else {\n        state.loginType = 1;\n      }\n      callback();\n    },\n    handleTabClick: function handleTabClick(key) {\n      this.customActiveKey = key;\n      // this.form.resetFields()\n    },\n    handleSubmit: function handleSubmit(e) {\n      var _this2 = this;\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n        state = this.state,\n        customActiveKey = this.customActiveKey,\n        Login = this.Login;\n      state.loginBtn = true;\n      var validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha'];\n      validateFields(validateFieldsKey, {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          console.log('login form', values);\n          var loginParams = _objectSpread({}, values);\n          delete loginParams.username;\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username;\n          loginParams.password = md5(values.password);\n          Login(loginParams).then(function (res) {\n            return _this2.loginSuccess(res);\n          }).catch(function (err) {\n            return _this2.requestFailed(err);\n          }).finally(function () {\n            state.loginBtn = false;\n          });\n        } else {\n          setTimeout(function () {\n            state.loginBtn = false;\n          }, 600);\n        }\n      });\n    },\n    getCaptcha: function getCaptcha(e) {\n      var _this3 = this;\n      e.preventDefault();\n      var validateFields = this.form.validateFields,\n        state = this.state;\n      validateFields(['mobile'], {\n        force: true\n      }, function (err, values) {\n        if (!err) {\n          state.smsSendBtn = true;\n          var interval = window.setInterval(function () {\n            if (state.time-- <= 0) {\n              state.time = 60;\n              state.smsSendBtn = false;\n              window.clearInterval(interval);\n            }\n          }, 1000);\n          var hide = _this3.$message.loading('验证码发送中..', 0);\n          getSmsCaptcha({\n            mobile: values.mobile\n          }).then(function (res) {\n            setTimeout(hide, 2500);\n            _this3.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            });\n          }).catch(function (err) {\n            setTimeout(hide, 1);\n            clearInterval(interval);\n            state.time = 60;\n            state.smsSendBtn = false;\n            _this3.requestFailed(err);\n          });\n        }\n      });\n    },\n    stepCaptchaSuccess: function stepCaptchaSuccess() {\n      this.loginSuccess();\n    },\n    stepCaptchaCancel: function stepCaptchaCancel() {\n      var _this4 = this;\n      this.Logout().then(function () {\n        _this4.loginBtn = false;\n        _this4.stepCaptchaVisible = false;\n      });\n    },\n    loginSuccess: function loginSuccess(res) {\n      var _this5 = this;\n      console.log(res);\n      // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n      /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n      this.$router.push({\n        path: '/'\n      });\n      // 延迟 1 秒显示欢迎信息\n      setTimeout(function () {\n        _this5.$notification.success({\n          message: '欢迎',\n          description: \"\".concat(timeFix(), \"\\uFF0C\\u6B22\\u8FCE\\u56DE\\u6765\")\n        });\n      }, 1000);\n      this.isLoginError = false;\n    },\n    requestFailed: function requestFailed(err) {\n      this.isLoginError = true;\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAoHA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAP;QACA;QACAC;QACAO;MACA;IACA;EACA;EACAC;IAAA;IACAC,aACAC;MACA;IACA,GACAC;MACA;IACA;IACA;EACA;;EACAC,yCACAC;IACA;IACAC;MACA;MACA;MACA;QACAT;MACA;QACAA;MACA;MACAU;IACA;IACAC;MACA;MACA;IACA;IACAC;MAAA;MACAC;MACA,IACAC,iBAIA,KAJAf;QACAC,QAGA,KAHAA;QACAP,kBAEA,KAFAA;QACAsB,QACA,KADAA;MAGAf;MAEA;MAEAc;QAAAE;MAAA;QACA;UACAC;UACA;UACA;UACAC;UACAA;UACAH,mBACAV;YAAA;UAAA,GACAC;YAAA;UAAA,GACAa;YACAnB;UACA;QACA;UACAoB;YACApB;UACA;QACA;MACA;IACA;IACAqB;MAAA;MACAR;MACA;QAAAb;MAEAc;QAAAE;MAAA;QACA;UACAhB;UAEA;YACA;cACAA;cACAA;cACAsB;YACA;UACA;UAEA;UACAC;YAAAC;UAAA;YACAJ;YACA;cACAK;cACAC;cACAC;YACA;UACA;YACAP;YACAQ;YACA5B;YACAA;YACA;UACA;QACA;MACA;IACA;IACA6B;MACA;IACA;IACAC;MAAA;MACA;QACA;QACA;MACA;IACA;IACAC;MAAA;MACAd;MACA;MACA;MACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA;QAAAe;MAAA;MACA;MACAZ;QACA;UACAK;UACAC;QACA;MACA;MACA;IACA;IACAO;MACA;MACA;QACAR;QACAC;QACAC;MACA;IACA;EAAA;AAEA","names":["components","TwoStepCaptcha","data","customActiveKey","loginBtn","loginType","isLoginError","requiredTwoStepCaptcha","stepCaptchaVisible","form","state","time","smsSendBtn","created","get2step","then","catch","methods","mapActions","handleUsernameOrEmail","callback","handleTabClick","handleSubmit","e","validateFields","Login","force","console","loginParams","finally","setTimeout","getCaptcha","window","getSmsCaptcha","mobile","message","description","duration","clearInterval","stepCaptchaSuccess","stepCaptchaCancel","loginSuccess","path","requestFailed"],"sourceRoot":"src/views/user","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" :tab=\"$t('user.login.tab-login-credentials')\">\n          <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" :message=\"$t('user.login.message-invalid-credentials')\" />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              :placeholder=\"$t('user.login.username.placeholder')\"\n              v-decorator=\"[\n                'username',\n                {rules: [{ required: true, message: $t('user.userName.required') }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input-password\n              size=\"large\"\n              :placeholder=\"$t('user.login.password.placeholder')\"\n              v-decorator=\"[\n                'password',\n                {rules: [{ required: true, message: $t('user.password.required') }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input-password>\n          </a-form-item>\n        </a-tab-pane>\n        <a-tab-pane key=\"tab2\" :tab=\"$t('user.login.tab-login-mobile')\">\n          <a-form-item>\n            <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.placeholder')\" v-decorator=\"['mobile', {rules: [{ required: true, pattern: /^1[34578]\\d{9}$/, message: $t('user.login.mobile.placeholder') }], validateTrigger: 'change'}]\">\n              <a-icon slot=\"prefix\" type=\"mobile\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n            </a-input>\n          </a-form-item>\n\n          <a-row :gutter=\"16\">\n            <a-col class=\"gutter-row\" :span=\"16\">\n              <a-form-item>\n                <a-input size=\"large\" type=\"text\" :placeholder=\"$t('user.login.mobile.verification-code.placeholder')\" v-decorator=\"['captcha', {rules: [{ required: true, message: $t('user.verification-code.required') }], validateTrigger: 'blur'}]\">\n                  <a-icon slot=\"prefix\" type=\"mail\" :style=\"{ color: 'rgba(0,0,0,.25)' }\"/>\n                </a-input>\n              </a-form-item>\n            </a-col>\n            <a-col class=\"gutter-row\" :span=\"8\">\n              <a-button\n                class=\"getCaptcha\"\n                tabindex=\"-1\"\n                :disabled=\"state.smsSendBtn\"\n                @click.stop.prevent=\"getCaptcha\"\n                v-text=\"!state.smsSendBtn && $t('user.register.get-verification-code') || (state.time+' s')\"\n              ></a-button>\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['rememberMe', { valuePropName: 'checked' }]\">{{ $t('user.login.remember-me') }}</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >{{ $t('user.login.forgot-password') }}</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >{{ $t('user.login.login') }}</a-button>\n      </a-form-item>\n\n      <div class=\"user-login-other\">\n        <span>{{ $t('user.login.sign-in-with') }}</span>\n        <a>\n          <a-icon class=\"item-icon\" type=\"alipay-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"taobao-circle\"></a-icon>\n        </a>\n        <a>\n          <a-icon class=\"item-icon\" type=\"weibo-circle\"></a-icon>\n        </a>\n        <router-link class=\"register\" :to=\"{ name: 'register' }\">{{ $t('user.login.signup') }}</router-link>\n      </div>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport md5 from 'md5'\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\nimport { getSmsCaptcha, get2step } from '@/api/login'\n\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 0,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 0,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    get2step({ })\n      .then(res => {\n        this.requiredTwoStepCaptcha = res.result.stepCode\n      })\n      .catch(() => {\n        this.requiredTwoStepCaptcha = false\n      })\n    // this.requiredTwoStepCaptcha = true\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        customActiveKey,\n        Login\n      } = this\n\n      state.loginBtn = true\n\n      const validateFieldsKey = customActiveKey === 'tab1' ? ['username', 'password'] : ['mobile', 'captcha']\n\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          console.log('login form', values)\n          const loginParams = { ...values }\n          delete loginParams.username\n          loginParams[!state.loginType ? 'email' : 'username'] = values.username\n          loginParams.password = md5(values.password)\n          Login(loginParams)\n            .then((res) => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n    getCaptcha (e) {\n      e.preventDefault()\n      const { form: { validateFields }, state } = this\n\n      validateFields(['mobile'], { force: true }, (err, values) => {\n        if (!err) {\n          state.smsSendBtn = true\n\n          const interval = window.setInterval(() => {\n            if (state.time-- <= 0) {\n              state.time = 60\n              state.smsSendBtn = false\n              window.clearInterval(interval)\n            }\n          }, 1000)\n\n          const hide = this.$message.loading('验证码发送中..', 0)\n          getSmsCaptcha({ mobile: values.mobile }).then(res => {\n            setTimeout(hide, 2500)\n            this.$notification['success']({\n              message: '提示',\n              description: '验证码获取成功，您的验证码为：' + res.result.captcha,\n              duration: 8\n            })\n          }).catch(err => {\n            setTimeout(hide, 1)\n            clearInterval(interval)\n            state.time = 60\n            state.smsSendBtn = false\n            this.requestFailed(err)\n          })\n        }\n      })\n    },\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    loginSuccess (res) {\n      console.log(res)\n      // check res.homePage define, set $router.push name res.homePage\n      // Why not enter onComplete\n      /*\n      this.$router.push({ name: 'analysis' }, () => {\n        console.log('onComplete')\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      })\n      */\n      this.$router.push({ path: '/' })\n      // 延迟 1 秒显示欢迎信息\n      setTimeout(() => {\n        this.$notification.success({\n          message: '欢迎',\n          description: `${timeFix()}，欢迎回来`\n        })\n      }, 1000)\n      this.isLoginError = false\n    },\n    requestFailed (err) {\n      this.isLoginError = true\n      this.$notification['error']({\n        message: '错误',\n        description: ((err.response || {}).data || {}).message || '请求出现错误，请稍后再试',\n        duration: 4\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}