{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport Vue from 'vue';\nimport store from '@/store';\n\n/**\n * Action 权限指令\n * 指令用法：\n *  - 在需要控制 action 级别权限的组件上使用 v-action:[method] , 如下：\n *    <i-button v-action:add >添加用户</a-button>\n *    <a-button v-action:delete>删除用户</a-button>\n *    <a v-action:edit @click=\"edit(record)\">修改</a>\n *\n *  - 当前用户没有权限时，组件上使用了该指令则会被隐藏\n *  - 当后台权限跟 pro 提供的模式不同时，只需要针对这里的权限过滤进行修改即可\n *\n *  @see https://github.com/vueComponent/ant-design-vue-pro/pull/53\n */\nvar action = Vue.directive('action', {\n  inserted: function inserted(el, binding, vnode) {\n    var actionName = binding.arg;\n    var roles = store.getters.roles;\n    var elVal = vnode.context.$route.meta.permission;\n    var permissionId = Object.prototype.toString.call(elVal) === '[object String]' && [elVal] || elVal;\n    roles.permissions.forEach(function (p) {\n      if (!permissionId.includes(p.permissionId)) {\n        return;\n      }\n      if (p.actionList && !p.actionList.includes(actionName)) {\n        el.parentNode && el.parentNode.removeChild(el) || (el.style.display = 'none');\n      }\n    });\n  }\n});\nexport default action;","map":{"version":3,"names":["Vue","store","action","directive","inserted","el","binding","vnode","actionName","arg","roles","getters","elVal","context","$route","meta","permission","permissionId","Object","prototype","toString","call","permissions","forEach","p","includes","actionList","parentNode","removeChild","style","display"],"sources":["/home/cg/public/h1emu-boot-vue/src/core/directives/action.js"],"sourcesContent":["import Vue from 'vue'\nimport store from '@/store'\n\n/**\n * Action 权限指令\n * 指令用法：\n *  - 在需要控制 action 级别权限的组件上使用 v-action:[method] , 如下：\n *    <i-button v-action:add >添加用户</a-button>\n *    <a-button v-action:delete>删除用户</a-button>\n *    <a v-action:edit @click=\"edit(record)\">修改</a>\n *\n *  - 当前用户没有权限时，组件上使用了该指令则会被隐藏\n *  - 当后台权限跟 pro 提供的模式不同时，只需要针对这里的权限过滤进行修改即可\n *\n *  @see https://github.com/vueComponent/ant-design-vue-pro/pull/53\n */\nconst action = Vue.directive('action', {\n  inserted: function (el, binding, vnode) {\n    const actionName = binding.arg\n    const roles = store.getters.roles\n    const elVal = vnode.context.$route.meta.permission\n    const permissionId = Object.prototype.toString.call(elVal) === '[object String]' && [elVal] || elVal\n    roles.permissions.forEach(p => {\n      if (!permissionId.includes(p.permissionId)) {\n        return\n      }\n      if (p.actionList && !p.actionList.includes(actionName)) {\n        el.parentNode && el.parentNode.removeChild(el) || (el.style.display = 'none')\n      }\n    })\n  }\n})\n\nexport default action\n"],"mappings":";;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,MAAM,GAAGF,GAAG,CAACG,SAAS,CAAC,QAAQ,EAAE;EACrCC,QAAQ,EAAE,kBAAUC,EAAE,EAAEC,OAAO,EAAEC,KAAK,EAAE;IACtC,IAAMC,UAAU,GAAGF,OAAO,CAACG,GAAG;IAC9B,IAAMC,KAAK,GAAGT,KAAK,CAACU,OAAO,CAACD,KAAK;IACjC,IAAME,KAAK,GAAGL,KAAK,CAACM,OAAO,CAACC,MAAM,CAACC,IAAI,CAACC,UAAU;IAClD,IAAMC,YAAY,GAAGC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACT,KAAK,CAAC,KAAK,iBAAiB,IAAI,CAACA,KAAK,CAAC,IAAIA,KAAK;IACpGF,KAAK,CAACY,WAAW,CAACC,OAAO,CAAC,UAAAC,CAAC,EAAI;MAC7B,IAAI,CAACP,YAAY,CAACQ,QAAQ,CAACD,CAAC,CAACP,YAAY,CAAC,EAAE;QAC1C;MACF;MACA,IAAIO,CAAC,CAACE,UAAU,IAAI,CAACF,CAAC,CAACE,UAAU,CAACD,QAAQ,CAACjB,UAAU,CAAC,EAAE;QACtDH,EAAE,CAACsB,UAAU,IAAItB,EAAE,CAACsB,UAAU,CAACC,WAAW,CAACvB,EAAE,CAAC,KAAKA,EAAE,CAACwB,KAAK,CAACC,OAAO,GAAG,MAAM,CAAC;MAC/E;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAe5B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}