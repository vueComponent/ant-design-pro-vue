{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport Mock from 'mockjs2';\nimport { builder, getBody } from '../util';\nvar username = ['admin', 'super'];\n// 强硬要求 ant.design 相同密码\n// '21232f297a57a5a743894a0e4a801fc3',\nvar password = ['8914de686ab28dc22f30d3d8e107ff6c', '21232f297a57a5a743894a0e4a801fc3']; // admin, ant.design\n\nvar login = function login(options) {\n  var body = getBody(options);\n  console.log('mock: body', body);\n  if (!username.includes(body.username) || !password.includes(body.password)) {\n    return builder({\n      isLogin: true\n    }, '账户或密码错误', 401);\n  }\n  return builder({\n    'id': Mock.mock('@guid'),\n    'name': Mock.mock('@name'),\n    'username': 'admin',\n    'password': '',\n    'avatar': 'https://gw.alipayobjects.com/zos/rmsportal/jZUIxmJycoymBprLOUbT.png',\n    'status': 1,\n    'telephone': '',\n    'lastLoginIp': '27.154.74.117',\n    'lastLoginTime': 1534837621348,\n    'creatorId': 'admin',\n    'createTime': 1497160610259,\n    'deleted': 0,\n    'roleId': 'admin',\n    'lang': 'zh-CN',\n    'token': '4291d7da9005377ec9aec4a71ea837f'\n  }, '', 200, {\n    'Custom-Header': Mock.mock('@guid')\n  });\n};\nvar logout = function logout() {\n  return builder({}, '[测试接口] 注销成功');\n};\nvar smsCaptcha = function smsCaptcha() {\n  return builder({\n    captcha: Mock.mock('@integer(10000, 99999)')\n  });\n};\nvar twofactor = function twofactor() {\n  return builder({\n    stepCode: Mock.mock('@integer(0, 1)')\n  });\n};\nMock.mock(/\\/auth\\/login/, 'post', login);\nMock.mock(/\\/auth\\/logout/, 'post', logout);\nMock.mock(/\\/account\\/sms/, 'post', smsCaptcha);\nMock.mock(/\\/auth\\/2step-code/, 'post', twofactor);","map":{"version":3,"names":["Mock","builder","getBody","username","password","login","options","body","console","log","includes","isLogin","mock","logout","smsCaptcha","captcha","twofactor","stepCode"],"sources":["/home/cg/public/h1emu-boot-vue/src/mock/services/auth.js"],"sourcesContent":["import Mock from 'mockjs2'\nimport { builder, getBody } from '../util'\n\nconst username = ['admin', 'super']\n// 强硬要求 ant.design 相同密码\n// '21232f297a57a5a743894a0e4a801fc3',\nconst password = ['8914de686ab28dc22f30d3d8e107ff6c', '21232f297a57a5a743894a0e4a801fc3'] // admin, ant.design\n\nconst login = (options) => {\n  const body = getBody(options)\n  console.log('mock: body', body)\n  if (!username.includes(body.username) || !password.includes(body.password)) {\n    return builder({ isLogin: true }, '账户或密码错误', 401)\n  }\n\n  return builder({\n    'id': Mock.mock('@guid'),\n    'name': Mock.mock('@name'),\n    'username': 'admin',\n    'password': '',\n    'avatar': 'https://gw.alipayobjects.com/zos/rmsportal/jZUIxmJycoymBprLOUbT.png',\n    'status': 1,\n    'telephone': '',\n    'lastLoginIp': '27.154.74.117',\n    'lastLoginTime': 1534837621348,\n    'creatorId': 'admin',\n    'createTime': 1497160610259,\n    'deleted': 0,\n    'roleId': 'admin',\n    'lang': 'zh-CN',\n    'token': '4291d7da9005377ec9aec4a71ea837f'\n  }, '', 200, { 'Custom-Header': Mock.mock('@guid') })\n}\n\nconst logout = () => {\n  return builder({}, '[测试接口] 注销成功')\n}\n\nconst smsCaptcha = () => {\n  return builder({ captcha: Mock.mock('@integer(10000, 99999)') })\n}\n\nconst twofactor = () => {\n  return builder({ stepCode: Mock.mock('@integer(0, 1)') })\n}\n\nMock.mock(/\\/auth\\/login/, 'post', login)\nMock.mock(/\\/auth\\/logout/, 'post', logout)\nMock.mock(/\\/account\\/sms/, 'post', smsCaptcha)\nMock.mock(/\\/auth\\/2step-code/, 'post', twofactor)\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,OAAO,EAAEC,OAAO,QAAQ,SAAS;AAE1C,IAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;AACnC;AACA;AACA,IAAMC,QAAQ,GAAG,CAAC,kCAAkC,EAAE,kCAAkC,CAAC,EAAC;;AAE1F,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAIC,OAAO,EAAK;EACzB,IAAMC,IAAI,GAAGL,OAAO,CAACI,OAAO,CAAC;EAC7BE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,IAAI,CAAC;EAC/B,IAAI,CAACJ,QAAQ,CAACO,QAAQ,CAACH,IAAI,CAACJ,QAAQ,CAAC,IAAI,CAACC,QAAQ,CAACM,QAAQ,CAACH,IAAI,CAACH,QAAQ,CAAC,EAAE;IAC1E,OAAOH,OAAO,CAAC;MAAEU,OAAO,EAAE;IAAK,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC;EACnD;EAEA,OAAOV,OAAO,CAAC;IACb,IAAI,EAAED,IAAI,CAACY,IAAI,CAAC,OAAO,CAAC;IACxB,MAAM,EAAEZ,IAAI,CAACY,IAAI,CAAC,OAAO,CAAC;IAC1B,UAAU,EAAE,OAAO;IACnB,UAAU,EAAE,EAAE;IACd,QAAQ,EAAE,qEAAqE;IAC/E,QAAQ,EAAE,CAAC;IACX,WAAW,EAAE,EAAE;IACf,aAAa,EAAE,eAAe;IAC9B,eAAe,EAAE,aAAa;IAC9B,WAAW,EAAE,OAAO;IACpB,YAAY,EAAE,aAAa;IAC3B,SAAS,EAAE,CAAC;IACZ,QAAQ,EAAE,OAAO;IACjB,MAAM,EAAE,OAAO;IACf,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE;IAAE,eAAe,EAAEZ,IAAI,CAACY,IAAI,CAAC,OAAO;EAAE,CAAC,CAAC;AACtD,CAAC;AAED,IAAMC,MAAM,GAAG,SAATA,MAAM,GAAS;EACnB,OAAOZ,OAAO,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC;AACnC,CAAC;AAED,IAAMa,UAAU,GAAG,SAAbA,UAAU,GAAS;EACvB,OAAOb,OAAO,CAAC;IAAEc,OAAO,EAAEf,IAAI,CAACY,IAAI,CAAC,wBAAwB;EAAE,CAAC,CAAC;AAClE,CAAC;AAED,IAAMI,SAAS,GAAG,SAAZA,SAAS,GAAS;EACtB,OAAOf,OAAO,CAAC;IAAEgB,QAAQ,EAAEjB,IAAI,CAACY,IAAI,CAAC,gBAAgB;EAAE,CAAC,CAAC;AAC3D,CAAC;AAEDZ,IAAI,CAACY,IAAI,CAAC,eAAe,EAAE,MAAM,EAAEP,KAAK,CAAC;AACzCL,IAAI,CAACY,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAEC,MAAM,CAAC;AAC3Cb,IAAI,CAACY,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAEE,UAAU,CAAC;AAC/Cd,IAAI,CAACY,IAAI,CAAC,oBAAoB,EAAE,MAAM,EAAEI,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}