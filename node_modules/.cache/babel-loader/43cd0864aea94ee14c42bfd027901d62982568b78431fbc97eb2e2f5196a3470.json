{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport store from '@/store';\nimport storage from 'store';\nimport notification from 'ant-design-vue/es/notification';\nimport { VueAxios } from './axios';\nimport { ACCESS_TOKEN } from '@/store/mutation-types';\n\n// 创建 axios 实例\nvar request = axios.create({\n  // API 请求的默认前缀\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 6000 // 请求超时时间\n});\n\n// 异常拦截处理器\nvar errorHandler = function errorHandler(error) {\n  if (error.response) {\n    var data = error.response.data;\n    // 从 localstorage 获取 token\n    var token = storage.get(ACCESS_TOKEN);\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      });\n    }\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      });\n      if (token) {\n        store.dispatch('Logout').then(function () {\n          setTimeout(function () {\n            window.location.reload();\n          }, 1500);\n        });\n      }\n    }\n  }\n  return Promise.reject(error);\n};\n\n// request interceptor\nrequest.interceptors.request.use(function (config) {\n  var token = storage.get(ACCESS_TOKEN);\n  // 如果 token 存在\n  // 让每个请求携带自定义 token 请根据实际情况自行修改\n  if (token) {\n    config.headers[ACCESS_TOKEN] = token;\n  }\n  return config;\n}, errorHandler);\n\n// response interceptor\nrequest.interceptors.response.use(function (response) {\n  return response.data;\n}, errorHandler);\nvar installer = {\n  vm: {},\n  install: function install(Vue) {\n    Vue.use(VueAxios, request);\n  }\n};\nexport default request;\nexport { installer as VueAxios, request as axios };","map":{"version":3,"names":["axios","store","storage","notification","VueAxios","ACCESS_TOKEN","request","create","baseURL","process","env","VUE_APP_API_BASE_URL","timeout","errorHandler","error","response","data","token","get","status","message","description","result","isLogin","dispatch","then","setTimeout","window","location","reload","Promise","reject","interceptors","use","config","headers","installer","vm","install","Vue"],"sources":["/home/cg/public/h1emu-boot-vue/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport store from '@/store'\nimport storage from 'store'\nimport notification from 'ant-design-vue/es/notification'\nimport { VueAxios } from './axios'\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\n\n// 创建 axios 实例\nconst request = axios.create({\n  // API 请求的默认前缀\n  baseURL: process.env.VUE_APP_API_BASE_URL,\n  timeout: 6000 // 请求超时时间\n})\n\n// 异常拦截处理器\nconst errorHandler = (error) => {\n  if (error.response) {\n    const data = error.response.data\n    // 从 localstorage 获取 token\n    const token = storage.get(ACCESS_TOKEN)\n    if (error.response.status === 403) {\n      notification.error({\n        message: 'Forbidden',\n        description: data.message\n      })\n    }\n    if (error.response.status === 401 && !(data.result && data.result.isLogin)) {\n      notification.error({\n        message: 'Unauthorized',\n        description: 'Authorization verification failed'\n      })\n      if (token) {\n        store.dispatch('Logout').then(() => {\n          setTimeout(() => {\n            window.location.reload()\n          }, 1500)\n        })\n      }\n    }\n  }\n  return Promise.reject(error)\n}\n\n// request interceptor\nrequest.interceptors.request.use(config => {\n  const token = storage.get(ACCESS_TOKEN)\n  // 如果 token 存在\n  // 让每个请求携带自定义 token 请根据实际情况自行修改\n  if (token) {\n    config.headers[ACCESS_TOKEN] = token\n  }\n  return config\n}, errorHandler)\n\n// response interceptor\nrequest.interceptors.response.use((response) => {\n  return response.data\n}, errorHandler)\n\nconst installer = {\n  vm: {},\n  install (Vue) {\n    Vue.use(VueAxios, request)\n  }\n}\n\nexport default request\n\nexport {\n  installer as VueAxios,\n  request as axios\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,OAAO;AAC3B,OAAOC,YAAY,MAAM,gCAAgC;AACzD,SAASC,QAAQ,QAAQ,SAAS;AAClC,SAASC,YAAY,QAAQ,wBAAwB;;AAErD;AACA,IAAMC,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC;EAC3B;EACAC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EACzCC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,KAAK,EAAK;EAC9B,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClB,IAAMC,IAAI,GAAGF,KAAK,CAACC,QAAQ,CAACC,IAAI;IAChC;IACA,IAAMC,KAAK,GAAGf,OAAO,CAACgB,GAAG,CAACb,YAAY,CAAC;IACvC,IAAIS,KAAK,CAACC,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACjChB,YAAY,CAACW,KAAK,CAAC;QACjBM,OAAO,EAAE,WAAW;QACpBC,WAAW,EAAEL,IAAI,CAACI;MACpB,CAAC,CAAC;IACJ;IACA,IAAIN,KAAK,CAACC,QAAQ,CAACI,MAAM,KAAK,GAAG,IAAI,EAAEH,IAAI,CAACM,MAAM,IAAIN,IAAI,CAACM,MAAM,CAACC,OAAO,CAAC,EAAE;MAC1EpB,YAAY,CAACW,KAAK,CAAC;QACjBM,OAAO,EAAE,cAAc;QACvBC,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAIJ,KAAK,EAAE;QACThB,KAAK,CAACuB,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,YAAM;UAClCC,UAAU,CAAC,YAAM;YACfC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;UAC1B,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CAAC;MACJ;IACF;EACF;EACA,OAAOC,OAAO,CAACC,MAAM,CAACjB,KAAK,CAAC;AAC9B,CAAC;;AAED;AACAR,OAAO,CAAC0B,YAAY,CAAC1B,OAAO,CAAC2B,GAAG,CAAC,UAAAC,MAAM,EAAI;EACzC,IAAMjB,KAAK,GAAGf,OAAO,CAACgB,GAAG,CAACb,YAAY,CAAC;EACvC;EACA;EACA,IAAIY,KAAK,EAAE;IACTiB,MAAM,CAACC,OAAO,CAAC9B,YAAY,CAAC,GAAGY,KAAK;EACtC;EACA,OAAOiB,MAAM;AACf,CAAC,EAAErB,YAAY,CAAC;;AAEhB;AACAP,OAAO,CAAC0B,YAAY,CAACjB,QAAQ,CAACkB,GAAG,CAAC,UAAClB,QAAQ,EAAK;EAC9C,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EAAEH,YAAY,CAAC;AAEhB,IAAMuB,SAAS,GAAG;EAChBC,EAAE,EAAE,CAAC,CAAC;EACNC,OAAO,mBAAEC,GAAG,EAAE;IACZA,GAAG,CAACN,GAAG,CAAC7B,QAAQ,EAAEE,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,eAAeA,OAAO;AAEtB,SACE8B,SAAS,IAAIhC,QAAQ,EACrBE,OAAO,IAAIN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}