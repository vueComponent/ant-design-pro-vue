{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport client from 'webpack-theme-color-replacer/client';\nimport generate from '@ant-design/colors/lib/generate';\nexport default {\n  getAntdSerials: function getAntdSerials(color) {\n    // 淡化（即less的tint）\n    var lightens = new Array(9).fill().map(function (t, i) {\n      return client.varyColor.lighten(color, i / 10);\n    });\n    // colorPalette变换得到颜色值\n    var colorPalettes = generate(color);\n    var rgb = client.varyColor.toNum3(color.replace('#', '')).join(',');\n    return lightens.concat(colorPalettes).concat(rgb);\n  },\n  changeColor: function changeColor(newColor) {\n    var options = {\n      newColors: this.getAntdSerials(newColor),\n      // new colors array, one-to-one corresponde with `matchColors`\n      changeUrl: function changeUrl(cssUrl) {\n        return \"/\".concat(cssUrl); // while router is not `hash` mode, it needs absolute path\n      }\n    };\n\n    return client.changer.changeColor(options, Promise);\n  }\n};","map":{"version":3,"names":["client","generate","getAntdSerials","color","lightens","Array","fill","map","t","i","varyColor","lighten","colorPalettes","rgb","toNum3","replace","join","concat","changeColor","newColor","options","newColors","changeUrl","cssUrl","changer","Promise"],"sources":["/home/cg/public/h1emu-boot-vue/src/components/SettingDrawer/themeColor.js"],"sourcesContent":["import client from 'webpack-theme-color-replacer/client'\nimport generate from '@ant-design/colors/lib/generate'\n\nexport default {\n  getAntdSerials (color) {\n    // 淡化（即less的tint）\n    const lightens = new Array(9).fill().map((t, i) => {\n      return client.varyColor.lighten(color, i / 10)\n    })\n    // colorPalette变换得到颜色值\n    const colorPalettes = generate(color)\n    const rgb = client.varyColor.toNum3(color.replace('#', '')).join(',')\n    return lightens.concat(colorPalettes).concat(rgb)\n  },\n  changeColor (newColor) {\n    var options = {\n      newColors: this.getAntdSerials(newColor), // new colors array, one-to-one corresponde with `matchColors`\n      changeUrl (cssUrl) {\n        return `/${cssUrl}` // while router is not `hash` mode, it needs absolute path\n      }\n    }\n    return client.changer.changeColor(options, Promise)\n  }\n}\n"],"mappings":";;;;;;;AAAA,OAAOA,MAAM,MAAM,qCAAqC;AACxD,OAAOC,QAAQ,MAAM,iCAAiC;AAEtD,eAAe;EACbC,cAAc,0BAAEC,KAAK,EAAE;IACrB;IACA,IAAMC,QAAQ,GAAG,IAAIC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAE,CAACC,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;MACjD,OAAOT,MAAM,CAACU,SAAS,CAACC,OAAO,CAACR,KAAK,EAAEM,CAAC,GAAG,EAAE,CAAC;IAChD,CAAC,CAAC;IACF;IACA,IAAMG,aAAa,GAAGX,QAAQ,CAACE,KAAK,CAAC;IACrC,IAAMU,GAAG,GAAGb,MAAM,CAACU,SAAS,CAACI,MAAM,CAACX,KAAK,CAACY,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;IACrE,OAAOZ,QAAQ,CAACa,MAAM,CAACL,aAAa,CAAC,CAACK,MAAM,CAACJ,GAAG,CAAC;EACnD,CAAC;EACDK,WAAW,uBAAEC,QAAQ,EAAE;IACrB,IAAIC,OAAO,GAAG;MACZC,SAAS,EAAE,IAAI,CAACnB,cAAc,CAACiB,QAAQ,CAAC;MAAE;MAC1CG,SAAS,qBAAEC,MAAM,EAAE;QACjB,kBAAWA,MAAM,EAAE,CAAC;MACtB;IACF,CAAC;;IACD,OAAOvB,MAAM,CAACwB,OAAO,CAACN,WAAW,CAACE,OAAO,EAAEK,OAAO,CAAC;EACrD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}